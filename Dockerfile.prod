# Production Docker image using distroless
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build production binary
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags '-w -s -extldflags "-static"' \
    -a -installsuffix cgo \
    -o apiserver \
    ./cmd/apiserver

# Use distroless for minimal attack surface
FROM gcr.io/distroless/static:nonroot

# Copy CA certificates and timezone data
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo

# Copy binary
COPY --from=builder /app/apiserver /apiserver

# Copy default config
COPY --from=builder /app/config.example.yaml /config.example.yaml

# Use non-root user
USER nonroot:nonroot

# Expose port
EXPOSE 8080

# Health check (note: distroless doesn't have curl/wget, use HTTP check via port)
ENTRYPOINT ["/apiserver"]