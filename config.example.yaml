## ADK-Golang 配置示例
## 复制为 config.yaml 使用

# 基础配置
plugin_dir: "./plugins"      # 插件目录路径
default_flow: "novel_flow_v1"  # 默认工作流名称
log_level: "info"            # 日志级别：debug/info/warn/error
log_dev: false               # 是否开发模式日志格式

# 数据库配置
db:
  dsn: "sqlite3://adk.db"    # 数据库连接字符串

# 队列配置
queue:
  impl: "memory"             # 队列实现：memory/redis
  addr: ""                   # Redis 地址，使用 memory 时留空
  stream: "adk_tasks"        # 任务流名称

# 模型API池配置
model_api_pools:
  # Deepseek 模型池示例，负载均衡多个 Deepseek 端点
  deepseek_pool:
    base: "deepseek"         # 基础模型类型，目前支持 deepseek
    endpoints:
      - url: "https://api1.deepseek.com/v1"  # 第一个 Deepseek API 端点
        apikey: "sk-xxxx1"                  # API 密钥
      - url: "https://api2.deepseek.com/v1"  # 第二个 Deepseek API 端点
        apikey: "sk-xxxx2"                  # API 密钥

  # 未来可扩展支持其他模型类型
  # gemini_pool:
  #   base: "gemini"
  #   endpoints:
  #     - url: "https://api1.gemini.example.com"
  #       apikey: "xxxx1"
  #     - url: "https://api2.gemini.example.com"
  #       apikey: "xxxx2"

## 在流程/插件中使用方法
## 在 Agent 配置中指定 Model: "pool:deepseek_pool"
## 系统会自动在多个端点间进行负载均衡
